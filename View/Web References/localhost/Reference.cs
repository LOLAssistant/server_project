//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1026
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1026 版自动生成。
// 
#pragma warning disable 1591

namespace View.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CheckUserServiceSoap", Namespace="http://localhost/CheckUserService.asmx/")]
    public partial class CheckUserService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private IDSoapHeader iDSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback matchingOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractCode_recordOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_extractCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CheckUserService() {
            this.Url = global::View.Properties.Settings.Default.View_localhost_CheckUserService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public IDSoapHeader IDSoapHeaderValue {
            get {
                return this.iDSoapHeaderValueField;
            }
            set {
                this.iDSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event matchingCompletedEventHandler matchingCompleted;
        
        /// <remarks/>
        public event extractCode_recordCompletedEventHandler extractCode_recordCompleted;
        
        /// <remarks/>
        public event check_extractCodeCompletedEventHandler check_extractCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("IDSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/CheckUserService.asmx/HelloWorld", RequestNamespace="http://localhost/CheckUserService.asmx/", ResponseNamespace="http://localhost/CheckUserService.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("IDSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/CheckUserService.asmx/matching", RequestNamespace="http://localhost/CheckUserService.asmx/", ResponseNamespace="http://localhost/CheckUserService.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool matching(string username, string password) {
            object[] results = this.Invoke("matching", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void matchingAsync(string username, string password) {
            this.matchingAsync(username, password, null);
        }
        
        /// <remarks/>
        public void matchingAsync(string username, string password, object userState) {
            if ((this.matchingOperationCompleted == null)) {
                this.matchingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmatchingOperationCompleted);
            }
            this.InvokeAsync("matching", new object[] {
                        username,
                        password}, this.matchingOperationCompleted, userState);
        }
        
        private void OnmatchingOperationCompleted(object arg) {
            if ((this.matchingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.matchingCompleted(this, new matchingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("IDSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/CheckUserService.asmx/extractCode_record", RequestNamespace="http://localhost/CheckUserService.asmx/", ResponseNamespace="http://localhost/CheckUserService.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool extractCode_record(string checkCode, string userName) {
            object[] results = this.Invoke("extractCode_record", new object[] {
                        checkCode,
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void extractCode_recordAsync(string checkCode, string userName) {
            this.extractCode_recordAsync(checkCode, userName, null);
        }
        
        /// <remarks/>
        public void extractCode_recordAsync(string checkCode, string userName, object userState) {
            if ((this.extractCode_recordOperationCompleted == null)) {
                this.extractCode_recordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractCode_recordOperationCompleted);
            }
            this.InvokeAsync("extractCode_record", new object[] {
                        checkCode,
                        userName}, this.extractCode_recordOperationCompleted, userState);
        }
        
        private void OnextractCode_recordOperationCompleted(object arg) {
            if ((this.extractCode_recordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractCode_recordCompleted(this, new extractCode_recordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("IDSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/CheckUserService.asmx/check_extractCode", RequestNamespace="http://localhost/CheckUserService.asmx/", ResponseNamespace="http://localhost/CheckUserService.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool check_extractCode(string checkCode) {
            object[] results = this.Invoke("check_extractCode", new object[] {
                        checkCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void check_extractCodeAsync(string checkCode) {
            this.check_extractCodeAsync(checkCode, null);
        }
        
        /// <remarks/>
        public void check_extractCodeAsync(string checkCode, object userState) {
            if ((this.check_extractCodeOperationCompleted == null)) {
                this.check_extractCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_extractCodeOperationCompleted);
            }
            this.InvokeAsync("check_extractCode", new object[] {
                        checkCode}, this.check_extractCodeOperationCompleted, userState);
        }
        
        private void Oncheck_extractCodeOperationCompleted(object arg) {
            if ((this.check_extractCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_extractCodeCompleted(this, new check_extractCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/CheckUserService.asmx/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://localhost/CheckUserService.asmx/", IsNullable=false)]
    public partial class IDSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passWordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string PassWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void matchingCompletedEventHandler(object sender, matchingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class matchingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal matchingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void extractCode_recordCompletedEventHandler(object sender, extractCode_recordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractCode_recordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractCode_recordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void check_extractCodeCompletedEventHandler(object sender, check_extractCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_extractCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_extractCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591